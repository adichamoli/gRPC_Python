# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import utility_pb2 as utility__pb2


class CalculatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddNum = channel.unary_unary(
        '/Calculator/AddNum',
        request_serializer=utility__pb2.NumberDouble.SerializeToString,
        response_deserializer=utility__pb2.Number.FromString,
        )
    self.SubNum = channel.unary_unary(
        '/Calculator/SubNum',
        request_serializer=utility__pb2.NumberDouble.SerializeToString,
        response_deserializer=utility__pb2.Number.FromString,
        )
    self.MulNum = channel.unary_unary(
        '/Calculator/MulNum',
        request_serializer=utility__pb2.NumberDouble.SerializeToString,
        response_deserializer=utility__pb2.Number.FromString,
        )
    self.DivNum = channel.unary_unary(
        '/Calculator/DivNum',
        request_serializer=utility__pb2.NumberDouble.SerializeToString,
        response_deserializer=utility__pb2.Number.FromString,
        )
    self.SquareRoot = channel.unary_unary(
        '/Calculator/SquareRoot',
        request_serializer=utility__pb2.Number.SerializeToString,
        response_deserializer=utility__pb2.Number.FromString,
        )


class CalculatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddNum(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubNum(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MulNum(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DivNum(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SquareRoot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalculatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddNum': grpc.unary_unary_rpc_method_handler(
          servicer.AddNum,
          request_deserializer=utility__pb2.NumberDouble.FromString,
          response_serializer=utility__pb2.Number.SerializeToString,
      ),
      'SubNum': grpc.unary_unary_rpc_method_handler(
          servicer.SubNum,
          request_deserializer=utility__pb2.NumberDouble.FromString,
          response_serializer=utility__pb2.Number.SerializeToString,
      ),
      'MulNum': grpc.unary_unary_rpc_method_handler(
          servicer.MulNum,
          request_deserializer=utility__pb2.NumberDouble.FromString,
          response_serializer=utility__pb2.Number.SerializeToString,
      ),
      'DivNum': grpc.unary_unary_rpc_method_handler(
          servicer.DivNum,
          request_deserializer=utility__pb2.NumberDouble.FromString,
          response_serializer=utility__pb2.Number.SerializeToString,
      ),
      'SquareRoot': grpc.unary_unary_rpc_method_handler(
          servicer.SquareRoot,
          request_deserializer=utility__pb2.Number.FromString,
          response_serializer=utility__pb2.Number.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Calculator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
